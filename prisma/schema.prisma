generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  profile   Profile?
  role      UserRole[]
  created_at  DateTime?    
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("users")
}

model Product {
  id        Int           @id @default(autoincrement())
  name      String
  price     Int
  thumbnail String?
  description String?
  slug      String
  stock     Int?
  in_stock  Boolean         @default(true)
  galleries Gallery[]
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("products")
}

model Gallery {
  id          Int           @id @default(autoincrement())
  product_id  Int
  product     Product       @relation(fields: [product_id], references: [id])
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("galleries")
}

model Profile {
  id          Int           @id @default(autoincrement())
  user_id     Int           @unique
  user        User          @relation(fields: [user_id], references: [id])
  photo       String?
  first_name  String?
  last_name   String?
  age         Int?
  address     String?
  date_birth  DateTime?
  status      String?
  is_active   Boolean       @default(true)
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("profiles")
}

model Role {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  user        UserRole[]
  permission  RolePermission[]
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("roles")
}

model Permission {
  id          Int           @id @default(autoincrement())
  name        String
  role        RolePermission[]
  created_at  DateTime?
  updated_at  DateTime?
  deleted_at  DateTime?
  @@map("permissions")
}

model UserRole {
  id          Int           @id @default(autoincrement())
  role_id     Int
  user_id     Int
  role        Role          @relation(fields: [role_id], references: [id])
  user        User          @relation(fields: [user_id], references: [id])
  @@map("user_has_roles")
}

model RolePermission {
  id          Int           @id @default(autoincrement())
  role_id     Int
  permission_id Int
  role        Role          @relation(fields: [role_id], references: [id])
  permission  Permission    @relation(fields: [permission_id], references: [id])
  @@map("role_has_permissions")
}